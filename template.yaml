AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: EventBridge -> Lambda with DLQ

Resources:
  MyLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.13
      CodeUri: hello_world/
      MemorySize: 128
      Timeout: 3
      Policies:
        - AWSLambdaBasicExecutionRole

  EventBridgeDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: EventBridgeDLQ

  EventBridgeDLQPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref EventBridgeDLQ
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: "sqs:SendMessage"
            Resource: !GetAtt EventBridgeDLQ.Arn

  MyEventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: MyEventBridgeRule
      EventPattern:
        source:
          - "my.custom.source"
      Targets:
        - Arn: !GetAtt MyLambdaFunction.Arn
          Id: MyLambdaTarget
          DeadLetterConfig:
            Arn: !GetAtt EventBridgeDLQ.Arn

  EventBridgeInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt MyLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt MyEventBridgeRule.Arn

Outputs:
  LambdaFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt MyLambdaFunction.Arn
  EventBridgeRule:
    Description: "EventBridge Rule ARN"
    Value: !Ref MyEventBridgeRule
  DeadLetterQueue:
    Description: "Dead Letter Queue ARN"
    Value: !GetAtt EventBridgeDLQ.Arn
